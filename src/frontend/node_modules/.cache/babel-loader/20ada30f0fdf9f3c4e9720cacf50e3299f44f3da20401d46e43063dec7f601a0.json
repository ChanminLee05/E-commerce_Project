{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chanmin\\\\chatbot_project\\\\chatbot\\\\chatbotfrontend\\\\src\\\\Components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./ChatBot.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBot({\n  onClose\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState(null);\n  const [submitButton, setSubmitButton] = useState(null);\n  function closeChat() {\n    setIsOpen(false);\n    onClose();\n  }\n  useEffect(() => {\n    const messageInput = document.getElementById(\"messageInput\");\n    const submitButton = document.getElementById(\"submitButton\");\n    function handleKeyDown(event) {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        sendMessage();\n        event.preventDefault(); // Prevent the default Enter key behavior (e.g., line break)\n      } else if (event.key === \"Enter\" && event.shiftKey) {\n        event.preventDefault(); // Prevent the default Enter key behavior\n        // Insert a newline character in the textarea\n        const currentPos = messageInput.selectionStart;\n        const text = messageInput.value;\n        const newText = text.substring(0, currentPos) + \"\\n\" + text.substring(currentPos);\n        messageInput.value = newText;\n      }\n    }\n    function handleButtonClick() {\n      sendMessage();\n    }\n    function handleInputChange() {\n      submitButton.style.visibility = messageInput.value.trim() !== \"\" ? \"visible\" : \"hidden\";\n    }\n    messageInput.addEventListener(\"keydown\", handleKeyDown);\n    submitButton.addEventListener(\"click\", handleButtonClick);\n    messageInput.addEventListener(\"input\", handleInputChange);\n    return () => {\n      messageInput.removeEventListener(\"keydown\", handleKeyDown);\n      submitButton.removeEventListener(\"click\", handleButtonClick);\n      messageInput.removeEventListener(\"input\", handleInputChange);\n    };\n  }, []);\n\n  // Add a function to handle sending the message\n  function sendMessage() {\n    const messageInput = document.getElementById(\"messageInput\");\n    const message = messageInput.value.trim();\n    if (message !== \"\") {\n      // Append the user message to the chatMessages list\n      setChatMessages(prevMessages => [...prevMessages, {\n        text: message,\n        type: 'user'\n      }]);\n\n      // Check if there is a predefined response for the user's input\n      const response = getPredefinedResponse(message);\n      if (response) {\n        // Append the chatbot response to the chatMessages list with a delay\n        setTimeout(() => {\n          setChatMessages(prevMessages => [...prevMessages, {\n            text: response,\n            type: 'bot'\n          }]);\n        }, 1000); // Replace 1000 milliseconds with your desired delay\n      }\n\n      // Reset the input\n      messageInput.value = \"\";\n    }\n  }\n\n  // Function to check if there is a predefined response for the user's input\n  function getPredefinedResponse(userInput) {\n    const lowerCaseInput = userInput.toLowerCase();\n    for (let i = 0; i < chatResponseObjects.length; i++) {\n      const question = chatResponseObjects[i].question;\n      if (typeof question === 'string' && lowerCaseInput === question.toLowerCase() || question instanceof RegExp && question.test(userInput)) {\n        return chatResponseObjects[i].response;\n      }\n    }\n    return null;\n  }\n  function createLoadingMessage() {\n    const loadingMessageElement = document.createElement(\"li\");\n    loadingMessageElement.classList.add(\"message\", \"loading\");\n    loadingMessageElement.innerHTML = \"<span class='bi bi-three-dots'></span>\";\n    return loadingMessageElement;\n  }\n\n  // Function to get the formatted date\n  function getFormattedDate() {\n    const currentDate = new Date();\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return currentDate.toLocaleDateString('en-US', options);\n  }\n  function getCurrentTime() {\n    const currentTime = new Date();\n    return currentTime.toLocaleTimeString('en-US');\n  }\n  const chatResponseObjects = [{\n    question: /^(hello|hi|what's up|what's up!|hey)$/i,\n    response: \"Hi, how are you?\"\n  }, {\n    question: /^(what is your name\\?|who are you\\?)$/i,\n    response: \"I'm a chatbot, nice to meet you!\"\n  }, {\n    question: /^(what is the date today\\?|date|what is the date today|what is date\\?|what is date today\\?)$/i,\n    response: getFormattedDate()\n  }, {\n    question: /^(I need help|help|Can you help me\\?|Can you help me|Can you help)$/i,\n    response: \"How can I help you?\"\n  }, {\n    question: /^(what time is it\\?|time|what time is it|what time is it now\\?|what time is it now)$/i,\n    response: getCurrentTime()\n  }, {\n    question: /^(I have technical issue|I have technical problem|technical issue|technical problem)$/i,\n    response: \"Please find the link above, and it will direct you to customer service page.\"\n  }, {\n    question: /^(I want to return my product|I want to return product|How can I return product\\?|How to return product\\?|return product|return)$/i,\n    response: \"Please find the link above, and it will direct you to customer service page.\"\n  }, {\n    question: /^(How long does it take to ship\\?|How long does it take for shipping\\?|How long does it take for delivery\\?)$/i,\n    response: \"It usually takes 3-4 business days\"\n  }, {\n    question: /^(Assistant|Representative|Assistant please|representative please|I want to talk to representative|I want to talk to assistant|I want to talk to person)$/i,\n    response: \"Please find the link above, and it will direct you to customer service page.\"\n  }, {\n    question: /.*/,\n    response: \"I'm sorry, I didn't understand that. How can I assist you?\"\n  }];\n  document.getElementById(\"messageInput\").addEventListener(\"input\", function () {\n    const submitButton = document.getElementById(\"submitButton\");\n    submitButton.style.visibility = this.value.trim() !== \"\" ? \"visible\" : \"hidden\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    style: {\n      display: isOpen ? 'block' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close close-btn\",\n        \"aria-label\": \"Close\",\n        onClick: closeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbot-name\",\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"robot-message message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"robot\",\n          className: \"bi bi-robot robot-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initial-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"chatbotInitialMessage\",\n            className: \"message1\",\n            children: \"Hi! I am a Chatbot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message1\",\n            children: \"How can I be of assistance to you?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-link-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"quick-link-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"link-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-caret-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/tech-support\",\n              children: \"Technical issue?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"link-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-caret-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/return\",\n              children: \"Request return your order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"link-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-caret-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/tech-support\",\n              children: \"Check your order status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QA-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"QA-list\",\n          id: \"chatMessages\",\n          children: chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: message.type === 'user' ? 'user-message' : 'bot-message',\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"type-section\",\n          id: \"messageInput\",\n          placeholder: \"Type message here\",\n          autoComplete: \"off\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"submitButton\",\n          className: \"bi bi-arrow-right-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBot, \"qIEq06RBnCVLnV7BsuN/EjW4XHk=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","ChatBot","onClose","_s","isOpen","setIsOpen","chatMessages","setChatMessages","messageInput","setMessageInput","submitButton","setSubmitButton","closeChat","document","getElementById","handleKeyDown","event","key","shiftKey","sendMessage","preventDefault","currentPos","selectionStart","text","value","newText","substring","handleButtonClick","handleInputChange","style","visibility","trim","addEventListener","removeEventListener","message","prevMessages","type","response","getPredefinedResponse","setTimeout","userInput","lowerCaseInput","toLowerCase","i","chatResponseObjects","length","question","RegExp","test","createLoadingMessage","loadingMessageElement","createElement","classList","add","innerHTML","getFormattedDate","currentDate","Date","options","weekday","year","month","day","toLocaleDateString","getCurrentTime","currentTime","toLocaleTimeString","className","display","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","to","map","index","placeholder","autoComplete","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/chatbotfrontend/src/Components/ChatBot.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./ChatBot.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ChatBot({ onClose }) {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState(null);\r\n    const [submitButton, setSubmitButton] = useState(null);\r\n\r\n    function closeChat() {\r\n        setIsOpen(false);\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const messageInput = document.getElementById(\"messageInput\");\r\n        const submitButton = document.getElementById(\"submitButton\");\r\n\r\n        function handleKeyDown(event) {\r\n            if (event.key === \"Enter\" && !event.shiftKey) {\r\n                sendMessage();\r\n                event.preventDefault(); // Prevent the default Enter key behavior (e.g., line break)\r\n            } else if (event.key === \"Enter\" && event.shiftKey) {\r\n                event.preventDefault(); // Prevent the default Enter key behavior\r\n                // Insert a newline character in the textarea\r\n                const currentPos = messageInput.selectionStart;\r\n                const text = messageInput.value;\r\n                const newText = text.substring(0, currentPos) + \"\\n\" + text.substring(currentPos);\r\n                messageInput.value = newText;\r\n            }\r\n        }\r\n\r\n        function handleButtonClick() {\r\n            sendMessage();\r\n        }\r\n\r\n        function handleInputChange() {\r\n            submitButton.style.visibility = messageInput.value.trim() !== \"\" ? \"visible\" : \"hidden\";\r\n        }\r\n\r\n        messageInput.addEventListener(\"keydown\", handleKeyDown);\r\n        submitButton.addEventListener(\"click\", handleButtonClick);\r\n        messageInput.addEventListener(\"input\", handleInputChange);\r\n\r\n        return () => {\r\n            messageInput.removeEventListener(\"keydown\", handleKeyDown);\r\n            submitButton.removeEventListener(\"click\", handleButtonClick);\r\n            messageInput.removeEventListener(\"input\", handleInputChange);\r\n        };\r\n    }, []);\r\n\r\n    // Add a function to handle sending the message\r\n    function sendMessage() {\r\n        const messageInput = document.getElementById(\"messageInput\");\r\n        const message = messageInput.value.trim();\r\n\r\n        if (message !== \"\") {\r\n            // Append the user message to the chatMessages list\r\n            setChatMessages(prevMessages => [...prevMessages, {text: message, type: 'user'}]);\r\n\r\n            // Check if there is a predefined response for the user's input\r\n            const response = getPredefinedResponse(message);\r\n\r\n            if (response) {\r\n                // Append the chatbot response to the chatMessages list with a delay\r\n                setTimeout(() => {\r\n                    setChatMessages(prevMessages => [...prevMessages, {text: response, type: 'bot'}]);\r\n                }, 1000); // Replace 1000 milliseconds with your desired delay\r\n            }\r\n\r\n            // Reset the input\r\n            messageInput.value = \"\";\r\n        }\r\n    }\r\n\r\n        // Function to check if there is a predefined response for the user's input\r\n    function getPredefinedResponse(userInput) {\r\n        const lowerCaseInput = userInput.toLowerCase();\r\n\r\n        for (let i = 0; i < chatResponseObjects.length; i++) {\r\n            const question = chatResponseObjects[i].question;\r\n\r\n            if ((typeof question === 'string' && lowerCaseInput === question.toLowerCase()) ||\r\n                (question instanceof RegExp && question.test(userInput))) {\r\n                return chatResponseObjects[i].response;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function createLoadingMessage() {\r\n        const loadingMessageElement = document.createElement(\"li\");\r\n        loadingMessageElement.classList.add(\"message\", \"loading\");\r\n        loadingMessageElement.innerHTML = \"<span class='bi bi-three-dots'></span>\";\r\n        return loadingMessageElement;\r\n    }\r\n\r\n    // Function to get the formatted date\r\n    function getFormattedDate() {\r\n        const currentDate = new Date();\r\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n        return currentDate.toLocaleDateString('en-US', options);\r\n    }\r\n\r\n    function getCurrentTime() {\r\n        const currentTime = new Date();\r\n        return currentTime.toLocaleTimeString('en-US');\r\n    }\r\n\r\n    const chatResponseObjects = [\r\n        { question: /^(hello|hi|what's up|what's up!|hey)$/i, response: \"Hi, how are you?\" },\r\n        { question: /^(what is your name\\?|who are you\\?)$/i, response: \"I'm a chatbot, nice to meet you!\" },\r\n        { question: /^(what is the date today\\?|date|what is the date today|what is date\\?|what is date today\\?)$/i, response: getFormattedDate() },\r\n        { question: /^(I need help|help|Can you help me\\?|Can you help me|Can you help)$/i, response: \"How can I help you?\"},\r\n        { question: /^(what time is it\\?|time|what time is it|what time is it now\\?|what time is it now)$/i, response: getCurrentTime() },\r\n        { question: /^(I have technical issue|I have technical problem|technical issue|technical problem)$/i, response: \"Please find the link above, and it will direct you to customer service page.\" },\r\n        { question: /^(I want to return my product|I want to return product|How can I return product\\?|How to return product\\?|return product|return)$/i, response: \"Please find the link above, and it will direct you to customer service page.\"},\r\n        { question: /^(How long does it take to ship\\?|How long does it take for shipping\\?|How long does it take for delivery\\?)$/i, response: \"It usually takes 3-4 business days\"},\r\n        { question: /^(Assistant|Representative|Assistant please|representative please|I want to talk to representative|I want to talk to assistant|I want to talk to person)$/i, response: \"Please find the link above, and it will direct you to customer service page.\" },\r\n        { question: /.*/, response: \"I'm sorry, I didn't understand that. How can I assist you?\" }\r\n    ];\r\n\r\n    document.getElementById(\"messageInput\").addEventListener(\"input\", function() {\r\n        const submitButton = document.getElementById(\"submitButton\");\r\n        submitButton.style.visibility = this.value.trim() !== \"\" ? \"visible\" : \"hidden\";\r\n    });\r\n    \r\n    return (\r\n        <div className=\"chatbot\" style={{ display: isOpen ? 'block' : 'none' }}>\r\n            <div className=\"chatbot-header\">\r\n                <button type=\"button\" className=\"btn-close close-btn\" aria-label=\"Close\" onClick={closeChat}></button>\r\n                <span className=\"chatbot-name\">ChatBot</span>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"robot-message message\">\r\n                    <span id=\"robot\" className=\"bi bi-robot robot-icon\"></span>\r\n                    <div className=\"initial-message\">\r\n                        <p id=\"chatbotInitialMessage\" className=\"message1\">Hi! I am a Chatbot</p>\r\n                        <p className=\"message1\">How can I be of assistance to you?</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"quick-link-container\">\r\n                    <ul className=\"quick-link-list\">\r\n                        <li className=\"link-item\"><i className=\"bi bi-caret-right\"></i><Link to=\"/tech-support\">Technical issue?</Link></li>\r\n                        <li className=\"link-item\"><i className=\"bi bi-caret-right\"></i><Link to=\"/return\">Request return your order</Link></li>\r\n                        <li className=\"link-item\"><i className=\"bi bi-caret-right\"></i><Link to=\"/tech-support\">Check your order status</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"QA-container\">\r\n                    <ul className=\"QA-list\" id=\"chatMessages\">\r\n                        {chatMessages.map((message, index) => (\r\n                            <li key={index} className={message.type === 'user' ? 'user-message' : 'bot-message'}>\r\n                                <span>{message.text}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <input type=\"text\" className=\"type-section\" id=\"messageInput\" placeholder=\"Type message here\" autoComplete=\"off\" autoFocus/>\r\n                        <i id=\"submitButton\" className=\"bi bi-arrow-right-circle\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}