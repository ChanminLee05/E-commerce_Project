{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chanmin\\\\chatbot_project\\\\chatbot\\\\frontend\\\\src\\\\Components\\\\AdminPage\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = ({\n  userId,\n  username,\n  password,\n  email,\n  phoneNumber,\n  created\n}) => {\n  _s();\n  const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    userId: '',\n    username: '',\n    password: '',\n    email: '',\n    phoneNumber: '',\n    created: ''\n  });\n  const toggleAccordion = () => {\n    setIsAccordionOpen(!isAccordionOpen);\n  };\n  function handleChange(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    console.log(`Changing ${name} to ${value}`);\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n};\n_s(User, \"WxoBaNl3zz6vIWoX0wKGv2GxATg=\");\n_c = User;\nfunction handleUpdate(e) {\n  e.preventDefault();\n  const formDataToSend = new FormData();\n  for (const key in formData) {\n    formDataToSend.append(key, formData[key]);\n  }\n  fetch(`http://localhost:8080/nexusHub/admin/update/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\" // Set the content type to JSON\n    },\n    body: JSON.stringify(formData)\n  }).then(response => {\n    if (response.ok) {\n      console.log('Product updated Successfully');\n      setFormData({\n        userId: '',\n        username: '',\n        password: '',\n        email: '',\n        phoneNumber: '',\n        created: ''\n      });\n      response.json().then(data => {\n        toast.success('User updated Successfully', {\n          position: \"top-center\",\n          draggable: true,\n          hideProgressBar: true\n        });\n        window.location.reload();\n      });\n    } else {\n      console.error('Failed to update user');\n      toast.warn('Failed to update user', {\n        position: \"top-center\",\n        draggable: true,\n        hideProgressBar: true\n      });\n    }\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","User","userId","username","password","email","phoneNumber","created","_s","isAccordionOpen","setIsAccordionOpen","formData","setFormData","toggleAccordion","handleChange","e","name","value","files","target","console","log","prevState","_c","handleUpdate","preventDefault","formDataToSend","FormData","key","append","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","success","position","draggable","hideProgressBar","window","location","reload","error","warn","catch","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/frontend/src/Components/AdminPage/User.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst User = ({userId, username, password, email, phoneNumber, created}) => {\r\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        userId: '',\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        created: ''\r\n    });\r\n\r\n    const toggleAccordion = () => {\r\n        setIsAccordionOpen(!isAccordionOpen);\r\n    };\r\n\r\n    function handleChange(e) {\r\n        const { name, value, files } = e.target;\r\n        console.log(`Changing ${name} to ${value}`);\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n            }));\r\n        }\r\n    }\r\n\r\n    function handleUpdate(e) {\r\n        e.preventDefault();\r\n        const formDataToSend = new FormData();\r\n        for (const key in formData) {\r\n            formDataToSend.append(key, formData[key]);\r\n        }\r\n\r\n        fetch(`http://localhost:8080/nexusHub/admin/update/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" // Set the content type to JSON\r\n            },\r\n            body: JSON.stringify(formData)\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    console.log('Product updated Successfully');\r\n                    setFormData({\r\n                        userId: '',\r\n                        username: '',\r\n                        password: '',\r\n                        email: '',\r\n                        phoneNumber: '',\r\n                        created: ''\r\n                    });\r\n                    response.json().then(data => {\r\n                        toast.success('User updated Successfully', {\r\n                            position: \"top-center\",\r\n                            draggable: true,\r\n                            hideProgressBar: true\r\n                        });\r\n                        window.location.reload();\r\n                    })\r\n                } else {\r\n                    console.error('Failed to update user');\r\n                    toast.warn('Failed to update user', {\r\n                            position: \"top-center\",\r\n                            draggable: true,\r\n                            hideProgressBar: true\r\n                        }\r\n                    );\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}