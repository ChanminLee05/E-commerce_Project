{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chanmin\\\\chatbot_project\\\\chatbot\\\\frontend\\\\src\\\\Components\\\\AdminPage\\\\AdminLoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  function handleSignIn(e) {\n    e.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n    fetch(\"http://localhost:8080/nexusHub/authenticate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      if (response.ok) {\n        console.log('Login Successful');\n        response.json().then(data => {\n          localStorage.setItem('token', data.token);\n          setIsLoggedIn(true);\n          // Save username to localStorage if \"Remember Me\" is checked\n          if (rememberMe) {\n            localStorage.setItem('rememberedUsername', username);\n          } else {\n            localStorage.removeItem('rememberedUsername');\n            setUsername('');\n          }\n          toast.success('Login Successful', {\n            position: \"top-center\",\n            draggable: true,\n            hideProgressBar: true\n          });\n        });\n\n        // Schedule token removal after 1 hour\n        setTimeout(() => {\n          localStorage.removeItem('token');\n          setIsLoggedIn(false);\n          toast.warn('Session Expired. Please login again.', {\n            position: \"top-center\",\n            draggable: true,\n            hideProgressBar: true\n          });\n        }, 60000 * 60);\n        setPassword('');\n      } else {\n        console.error('Login Failed');\n        toast.warn('Username or Password is incorrect', {\n          position: \"top-center\",\n          draggable: true,\n          hideProgressBar: true\n        });\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  function handleLogOut() {\n    // Clear token from localStorage upon logout\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    toast.success(\"Logout Successful\", {\n      position: \"top-center\",\n      draggable: true,\n      hideProgressBar: true\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"textName\",\n          placeholder: \"Name\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"textPwd\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/Chatbot_Project/RegisterServlet\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLoginPage, \"7X2qaHaMGBDGWQUFTca5NuNu9SU=\");\n_c = AdminLoginPage;\nexport default AdminLoginPage;\nvar _c;\n$RefreshReg$(_c, \"AdminLoginPage\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","AdminLoginPage","_s","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","handleSignIn","e","preventDefault","user","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","localStorage","setItem","token","rememberMe","removeItem","success","position","draggable","hideProgressBar","setTimeout","warn","error","catch","handleLogOut","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","autoFocus","value","href","_c","$RefreshReg$"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/frontend/src/Components/AdminPage/AdminLoginPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst AdminLoginPage = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    function handleSignIn(e) {\r\n        e.preventDefault();\r\n        const user = {username, password}\r\n        console.log(user);\r\n        fetch(\"http://localhost:8080/nexusHub/authenticate\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(user)\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                console.log('Login Successful');\r\n                response.json().then(data => {\r\n                    localStorage.setItem('token', data.token);\r\n                    setIsLoggedIn(true);\r\n                    // Save username to localStorage if \"Remember Me\" is checked\r\n                    if (rememberMe) {\r\n                        localStorage.setItem('rememberedUsername', username);\r\n                    } else {\r\n                        localStorage.removeItem('rememberedUsername');\r\n                        setUsername('');\r\n                    }\r\n                    toast.success('Login Successful', {\r\n                        position: \"top-center\",\r\n                        draggable: true,\r\n                        hideProgressBar: true\r\n                    });\r\n                })\r\n\r\n                // Schedule token removal after 1 hour\r\n                setTimeout(() => {\r\n                    localStorage.removeItem('token');\r\n                    setIsLoggedIn(false);\r\n                    toast.warn('Session Expired. Please login again.', {\r\n                        position: \"top-center\",\r\n                        draggable: true,\r\n                        hideProgressBar: true\r\n                    });\r\n                }, 60000 * 60);\r\n\r\n                setPassword('');\r\n            } else {\r\n                console.error('Login Failed');\r\n                toast.warn('Username or Password is incorrect', {\r\n                        position: \"top-center\",\r\n                        draggable: true,\r\n                        hideProgressBar: true\r\n                    }\r\n                );\r\n            }\r\n        })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    function handleLogOut() {\r\n        // Clear token from localStorage upon logout\r\n        localStorage.removeItem('token');\r\n\r\n        setIsLoggedIn(false);\r\n        toast.success(\"Logout Successful\", {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <input type=\"text\" name=\"textName\" placeholder=\"Name\" autoFocus/>\r\n                        <input type=\"password\" name=\"textPwd\" placeholder=\"Password\"/>\r\n                            <input type=\"submit\" value=\"Login\"/>\r\n                                <p>Don't have an account? <a href=\"/Chatbot_Project/RegisterServlet\">Signup</a></p>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminLoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}