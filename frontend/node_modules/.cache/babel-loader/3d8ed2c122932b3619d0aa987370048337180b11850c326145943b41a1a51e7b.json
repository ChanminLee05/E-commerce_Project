{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chanmin\\\\chatbot_project\\\\chatbot\\\\chatbotfrontend\\\\src\\\\Components\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone_number, setPhoneNumber] = useState('');\n  function handleSignUp(e) {\n    e.preventDefault();\n\n    // Check if any required field is empty\n    if (username === '' || password === '' || email === '' || phone_number === '') {\n      toast.warn('Please fill out all fields', {\n        position: \"top-center\",\n        draggable: true,\n        hideProgressBar: true\n      });\n      return;\n    }\n\n    // Check if username or email contains empty space\n    if (username.trim() !== username || email.trim() !== email || /\\s/.test(username) || /\\s/.test(email)) {\n      toast.warn('No spaces allowed in username or email', {\n        position: \"top-center\",\n        draggable: true,\n        hideProgressBar: true\n      });\n      return;\n    }\n    const registerUser = {\n      username,\n      password,\n      email,\n      phone_number\n    };\n    console.log(registerUser);\n    fetch(\"http://localhost:8080/chatbot/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(registerUser)\n    }).then(response => {\n      if (response.ok) {\n        console.log('Register Successful');\n        toast.success('Register Successful', {\n          position: \"top-center\",\n          draggable: true,\n          hideProgressBar: true\n        });\n        setUsername('');\n        setPassword('');\n        setEmail('');\n        setPhoneNumber('');\n      } else {\n        console.error('Register Failed');\n        if (response.status === 409) {\n          toast.warn('Username or email already exists', {\n            position: \"top-center\",\n            draggable: true,\n            hideProgressBar: true\n          });\n        } else {\n          toast.error('Registration failed, please try again later', {\n            position: \"top-center\",\n            draggable: true,\n            hideProgressBar: true\n          });\n        }\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      toast.error('Something went wrong, please try again later', {\n        position: \"top-center\",\n        draggable: true,\n        hideProgressBar: true\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          placeholder: \"User name\",\n          required: true,\n          autoFocus: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          placeholder: \"123-456-7890\",\n          pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n          required: true,\n          value: phone_number,\n          onChange: e => setPhoneNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"registerButton\",\n          type: \"submit\",\n          value: \"Register\",\n          onClick: handleSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Already have an account? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"xhpLPD4rmpYK0dUAM9bTvYoDKEo=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Link","toast","ToastContainer","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","email","setEmail","phone_number","setPhoneNumber","handleSignUp","e","preventDefault","warn","position","draggable","hideProgressBar","trim","test","registerUser","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","success","error","status","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","autoFocus","value","onChange","target","pattern","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/chatbotfrontend/src/Components/RegisterPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\n\r\nconst RegisterPage = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone_number, setPhoneNumber] = useState('');\r\n\r\n    function handleSignUp(e) {\r\n        e.preventDefault();\r\n\r\n        // Check if any required field is empty\r\n        if (username === '' || password === '' || email === '' || phone_number === '') {\r\n            toast.warn('Please fill out all fields', {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Check if username or email contains empty space\r\n        if (username.trim() !== username || email.trim() !== email || /\\s/.test(username) || /\\s/.test(email)) {\r\n            toast.warn('No spaces allowed in username or email', {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const registerUser = {username, password, email, phone_number};\r\n        console.log(registerUser);\r\n        fetch(\"http://localhost:8080/chatbot/register\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(registerUser)\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                console.log('Register Successful');\r\n                toast.success('Register Successful', {\r\n                    position: \"top-center\",\r\n                    draggable: true,\r\n                    hideProgressBar: true\r\n                });\r\n                setUsername('');\r\n                setPassword('');\r\n                setEmail('');\r\n                setPhoneNumber('');\r\n            } else {\r\n                console.error('Register Failed');\r\n                if (response.status === 409) {\r\n                    toast.warn('Username or email already exists', {\r\n                        position: \"top-center\",\r\n                        draggable: true,\r\n                        hideProgressBar: true\r\n                    });\r\n                } else {\r\n                    toast.error('Registration failed, please try again later', {\r\n                        position: \"top-center\",\r\n                        draggable: true,\r\n                        hideProgressBar: true\r\n                    });\r\n                }\r\n            }\r\n        }).catch((error) => {\r\n            console.error('Error:', error);\r\n            toast.error('Something went wrong, please try again later', {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form >\r\n                <div>\r\n                    <h1>Signup</h1>\r\n                    <input type=\"text\" name=\"uname\" placeholder=\"User name\" required={true} autoFocus={true}\r\n                           value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required={true}\r\n                           value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required={true}\r\n                           value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                    <input type=\"tel\" name=\"phone\" placeholder=\"123-456-7890\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required={true}\r\n                           value={phone_number} onChange={(e) => setPhoneNumber(e.target.value)}/>\r\n                    <input id=\"registerButton\" type=\"submit\" value=\"Register\" onClick={handleSignUp}/>\r\n                    <p>Already have an account? </p><Link to=\"/main\">Login</Link>\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}