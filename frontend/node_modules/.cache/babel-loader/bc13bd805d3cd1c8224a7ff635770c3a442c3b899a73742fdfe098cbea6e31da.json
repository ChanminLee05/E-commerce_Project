{"ast":null,"code":"import React,{useState}from'react';import{Link}from\"react-router-dom\";import{toast,ToastContainer}from\"react-toastify\";import\"./ForgotPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPage=()=>{const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[userPage,setUserPage]=useState(true);function changeToUser(){setUserPage(true);}function changeToPassword(){setUserPage(false);}function findUsername(e){e.preventDefault();// Check if any required field is empty\nif(email===''){toast.warn('Please fill out fields',{position:\"top-center\",draggable:true,hideProgressBar:true});return;}const findUser={email};console.log(findUser);fetch(\"http://localhost:8080/chatbot/user/find?email=\".concat(encodeURIComponent(email)),{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}}).then(response=>{if(!response.ok){throw new Error('Failed to fetch user');}return response.text();}).then(data=>{console.log(\"Found User:\",data);toast.success(\"Your Username is \".concat(data),{position:\"bottom-center\",draggable:true,hideProgressBar:true});setEmail('');}).catch(error=>{console.error('Error fetching user:',error);toast.error('Could not find user or something went wrong, please try again later',{position:\"bottom-center\",draggable:true,hideProgressBar:true});});}function resetPassword(e){e.preventDefault();if(email===''){toast.warn('Please fill out the email field',{position:\"top-center\",draggable:true,hideProgressBar:true});return;}fetch(\"http://localhost:8080/chatbot/user/reset-password?email=\".concat(encodeURIComponent(email)),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"}}).then(response=>{if(!response.ok){throw new Error('Failed to reset password');}return response.text();}).then(data=>{console.log(\"Password reset successful\");toast.success(\"Password reset successful for \".concat(email,\". New password is sent your email address\"),{position:\"top-center\",draggable:true,hideProgressBar:true,toastId:\"custom-toast-container\"});setEmail('');}).catch(error=>{console.error('Error resetting password:',error);toast.error('Could not reset password or something went wrong, please try again later',{position:\"bottom-center\",draggable:true,hideProgressBar:true});});}return/*#__PURE__*/_jsxs(\"div\",{className:\"forgot\",children:[/*#__PURE__*/_jsx(\"form\",{className:\"forgot-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"username-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"forgot-title text-uppercase fs-3 fw-semibold\",onClick:changeToUser,children:\"Username\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"password-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"forgot-title text-uppercase fs-3 fw-semibold\",onClick:changeToPassword,children:\"Password\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"forgot-info-container\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"m-1 text-uppercase fs-4 fw-semibold text-body-secondary\",children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"email\",type:\"email\",name:\"email\",placeholder:\"Email\",required:true,value:email,onChange:e=>setEmail(e.target.value)})]})}),userPage?/*#__PURE__*/_jsx(\"input\",{className:\"m-5 btn btn-primary btn-lg fs-4 text-uppercase\",id:\"findUserButton\",type:\"submit\",value:\"Find User\",onClick:findUsername}):/*#__PURE__*/_jsx(\"input\",{className:\"m-5 btn btn-primary btn-lg fs-4 text-uppercase\",id:\"resetPasswordButton\",type:\"submit\",value:\"Reset Password\",onClick:resetPassword}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-footer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"m-3 fs-5\",children:\"Already have an account?\"}),/*#__PURE__*/_jsx(Link,{to:\"/main\",className:\"fs-5\",children:\"Login\"})]})]})}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default ForgotPage;","map":{"version":3,"names":["React","useState","Link","toast","ToastContainer","jsx","_jsx","jsxs","_jsxs","ForgotPage","username","setUsername","email","setEmail","userPage","setUserPage","changeToUser","changeToPassword","findUsername","e","preventDefault","warn","position","draggable","hideProgressBar","findUser","console","log","fetch","concat","encodeURIComponent","method","headers","then","response","ok","Error","text","data","success","catch","error","resetPassword","toastId","className","children","onClick","type","name","placeholder","required","value","onChange","target","id","to"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/frontend/src/Components/ForgotPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport \"./ForgotPage.css\";\r\n\r\nconst ForgotPage = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [userPage, setUserPage] = useState(true);\r\n\r\n    function changeToUser() {\r\n        setUserPage(true);\r\n    }\r\n    function changeToPassword() {\r\n        setUserPage(false);\r\n    }\r\n\r\n    function findUsername(e) {\r\n        e.preventDefault();\r\n\r\n        // Check if any required field is empty\r\n        if (email === '') {\r\n            toast.warn('Please fill out fields', {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const findUser = {email};\r\n        console.log(findUser);\r\n\r\n        fetch(`http://localhost:8080/chatbot/user/find?email=${encodeURIComponent(email)}`, {\r\n            method: \"GET\",\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch user');\r\n                }\r\n                return response.text();\r\n            })\r\n            .then((data) => {\r\n                console.log(\"Found User:\", data);\r\n                toast.success(`Your Username is ${data}`, {\r\n                    position: \"bottom-center\",\r\n                    draggable: true,\r\n                    hideProgressBar: true\r\n                });\r\n                setEmail('');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching user:', error);\r\n                toast.error('Could not find user or something went wrong, please try again later', {\r\n                    position: \"bottom-center\",\r\n                    draggable: true,\r\n                    hideProgressBar: true\r\n                });\r\n            });\r\n    }\r\n\r\n    function resetPassword(e) {\r\n        e.preventDefault();\r\n\r\n        if (email === '') {\r\n            toast.warn('Please fill out the email field', {\r\n                position: \"top-center\",\r\n                draggable: true,\r\n                hideProgressBar: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        fetch(`http://localhost:8080/chatbot/user/reset-password?email=${encodeURIComponent(email)}`, {\r\n            method: \"PUT\",\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to reset password');\r\n                }\r\n                return response.text();\r\n            })\r\n            .then((data) => {\r\n                console.log(\"Password reset successful\");\r\n                toast.success(`Password reset successful for ${email}. New password is sent your email address`, {\r\n                    position: \"top-center\",\r\n                    draggable: true,\r\n                    hideProgressBar: true,\r\n                    toastId: \"custom-toast-container\"\r\n                });\r\n                setEmail('');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error resetting password:', error);\r\n                toast.error('Could not reset password or something went wrong, please try again later', {\r\n                    position: \"bottom-center\",\r\n                    draggable: true,\r\n                    hideProgressBar: true\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"forgot\">\r\n            <form className=\"forgot-form\">\r\n                <div className=\"forgot-container\">\r\n                    <div className=\"forgot-header\">\r\n                        <div className=\"username-container\">\r\n                            <p className=\"forgot-title text-uppercase fs-3 fw-semibold\" onClick={changeToUser}>Username</p>\r\n                        </div>\r\n                        <div className=\"password-container\">\r\n                            <p className=\"forgot-title text-uppercase fs-3 fw-semibold\" onClick={changeToPassword}>Password</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"forgot-info-container\">\r\n                        <label>\r\n                            <p className=\"m-1 text-uppercase fs-4 fw-semibold text-body-secondary\">Email Address:</p>\r\n                            <input className=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\" required={true}\r\n                                   value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        </label>\r\n                    </div>\r\n                    {userPage ? (\r\n                        <input className=\"m-5 btn btn-primary btn-lg fs-4 text-uppercase\" id=\"findUserButton\" type=\"submit\" value=\"Find User\" onClick={findUsername}/>\r\n                    ) : <input className=\"m-5 btn btn-primary btn-lg fs-4 text-uppercase\" id=\"resetPasswordButton\" type=\"submit\" value=\"Reset Password\" onClick={resetPassword}/>}\r\n\r\n                    <div className=\"register-footer\">\r\n                        <span className=\"m-3 fs-5\">Already have an account?</span><Link to=\"/main\" className=\"fs-5\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}