{"ast":null,"code":"import React,{useEffect,useState}from'react';import\"./ChatBot.css\";import{Link}from\"react-router-dom\";import{chatResponseObjects}from'./ChatBotResponse';import RobotDog from'../Assets/robot-dog.png';import RobotAssistant from'../Assets/robot-assistant.png';import Robot from'../Assets/robot.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatBot(_ref){let{onClose}=_ref;const[isOpen,setIsOpen]=useState(true);const[chatMessages,setChatMessages]=useState(()=>{const storedMessages=localStorage.getItem('chatMessages');return storedMessages?JSON.parse(storedMessages):[];});function closeChat(){setIsOpen(false);onClose();}useEffect(()=>{localStorage.setItem('chatMessages',JSON.stringify(chatMessages));},[chatMessages]);useEffect(()=>{const messageInput=document.getElementById(\"messageInput\");const submitButton=document.getElementById(\"submitButton\");function handleKeyDown(event){if(event.key===\"Enter\"&&!event.shiftKey){sendMessage();event.preventDefault();// Prevent the default Enter key behavior (e.g., line break)\n}else if(event.key===\"Enter\"&&event.shiftKey){event.preventDefault();// Prevent the default Enter key behavior\n// Insert a newline character in the textarea\nconst currentPos=messageInput.selectionStart;const text=messageInput.value;const newText=text.substring(0,currentPos)+\"\\n\"+text.substring(currentPos);messageInput.value=newText;}}function handleButtonClick(){sendMessage();}function handleInputChange(){submitButton.style.visibility=messageInput.value.trim()!==\"\"?\"visible\":\"hidden\";}messageInput.addEventListener(\"keydown\",handleKeyDown);submitButton.addEventListener(\"click\",handleButtonClick);messageInput.addEventListener(\"input\",handleInputChange);window.addEventListener(\"beforeunload\",clearChatHistory);return()=>{messageInput.removeEventListener(\"keydown\",handleKeyDown);submitButton.removeEventListener(\"click\",handleButtonClick);messageInput.removeEventListener(\"input\",handleInputChange);};},[]);// Add a function to handle sending the message\nfunction sendMessage(){const messageInput=document.getElementById(\"messageInput\");const message=messageInput.value.trim();if(message!==\"\"){// Append the user message to the chatMessages list\nsetChatMessages(prevMessages=>[...prevMessages,{text:message,type:'user'}]);// Show loading message\nconst loadingMessage=createLoadingMessage();setChatMessages(prevMessages=>[...prevMessages,loadingMessage]);// Check if there is a predefined response for the user's input\nconst response=getPredefinedResponse(message);if(response){// Append the chatbot response to the chatMessages list with a delay\nsetTimeout(()=>{setChatMessages(prevMessages=>[...prevMessages.filter(msg=>msg!==loadingMessage),{text:response,type:'bot'}]);},1000);}// Reset the input\nmessageInput.value=\"\";}}function clearChatHistory(){localStorage.removeItem('chatMessages');}// Function to check if there is a predefined response for the user's input\nfunction getPredefinedResponse(userInput){const lowerCaseInput=userInput.toLowerCase();for(let i=0;i<chatResponseObjects.length;i++){const question=chatResponseObjects[i].question;const response=chatResponseObjects[i].response;if(typeof question==='string'&&lowerCaseInput===question.toLowerCase()||question instanceof RegExp&&question.test(userInput)){if(typeof response==='function'){return response();}else{return response;}}}return null;}function createLoadingMessage(){return{text:/*#__PURE__*/_jsx(\"div\",{className:\"message loading\",children:/*#__PURE__*/_jsx(\"span\",{className:\"bi bi-three-dots\"})}),type:'loading'};}return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",style:{display:isOpen?'block':'none'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close close-btn\",\"aria-label\":\"Close\",onClick:closeChat}),/*#__PURE__*/_jsx(\"img\",{src:Robot,alt:\"robot\",className:\"header-robot\"}),/*#__PURE__*/_jsx(\"span\",{className:\"chatbot-name\",children:\"Virtual Assistant\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatBox\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"initial-message-container\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"robot-dog\",src:RobotDog,alt:\"robot-dog\"}),/*#__PURE__*/_jsx(\"div\",{className:\"initial-message\",children:/*#__PURE__*/_jsxs(\"p\",{id:\"chatbotInitialMessage\",className:\"message1\",children:[\"I am \",/*#__PURE__*/_jsx(\"b\",{children:\"NexusBot\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-link-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"quick-message\",children:\"How can I help you?\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"quick-link-list\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"link-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/tech-support\",className:\"tech-support-link\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Tech Issue\"})})}),/*#__PURE__*/_jsx(\"li\",{className:\"link-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/tech-support\",className:\"tech-support-link\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Return\"})})}),/*#__PURE__*/_jsx(\"li\",{className:\"link-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/cart\",className:\"tech-support-link\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Order Status\"})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"QA-container\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"QA-list\",id:\"chatMessages\",style:{overflowY:'auto'},children:chatMessages.map((message,index)=>/*#__PURE__*/_jsxs(\"li\",{className:message.type==='user'?'user-message':'robot-message',children:[message.type==='user'&&/*#__PURE__*/_jsx(\"span\",{children:\"You: \"}),message.type==='bot'&&/*#__PURE__*/_jsx(\"img\",{src:RobotAssistant,alt:\"robot\",className:\"robot-assist-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:message.text})]},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group flex-nowrap input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"type-section\",id:\"messageInput\",placeholder:\"Type message here\",autoComplete:\"off\",autoFocus:true}),/*#__PURE__*/_jsx(\"i\",{id:\"submitButton\",className:\"bi bi-arrow-right-circle\"})]})]})]});}","map":{"version":3,"names":["React","useEffect","useState","Link","chatResponseObjects","RobotDog","RobotAssistant","Robot","jsx","_jsx","jsxs","_jsxs","ChatBot","_ref","onClose","isOpen","setIsOpen","chatMessages","setChatMessages","storedMessages","localStorage","getItem","JSON","parse","closeChat","setItem","stringify","messageInput","document","getElementById","submitButton","handleKeyDown","event","key","shiftKey","sendMessage","preventDefault","currentPos","selectionStart","text","value","newText","substring","handleButtonClick","handleInputChange","style","visibility","trim","addEventListener","window","clearChatHistory","removeEventListener","message","prevMessages","type","loadingMessage","createLoadingMessage","response","getPredefinedResponse","setTimeout","filter","msg","removeItem","userInput","lowerCaseInput","toLowerCase","i","length","question","RegExp","test","className","children","display","onClick","src","alt","id","to","overflowY","map","index","placeholder","autoComplete","autoFocus"],"sources":["C:/Users/Chanmin/chatbot_project/chatbot/frontend/src/Components/ChatBot.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./ChatBot.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { chatResponseObjects } from './ChatBotResponse';\r\nimport RobotDog from '../Assets/robot-dog.png';\r\nimport RobotAssistant from '../Assets/robot-assistant.png';\r\nimport Robot from '../Assets/robot.png';\r\n\r\n\r\nexport default function ChatBot({ onClose }) {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [chatMessages, setChatMessages] = useState(() => {\r\n        const storedMessages = localStorage.getItem('chatMessages');\r\n        return storedMessages ? JSON.parse(storedMessages) : [];\r\n    });\r\n\r\n    function closeChat() {\r\n        setIsOpen(false);\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('chatMessages', JSON.stringify(chatMessages));\r\n    }, [chatMessages]);\r\n\r\n    useEffect(() => {\r\n        const messageInput = document.getElementById(\"messageInput\");\r\n        const submitButton = document.getElementById(\"submitButton\");\r\n\r\n        function handleKeyDown(event) {\r\n            if (event.key === \"Enter\" && !event.shiftKey) {\r\n                sendMessage();\r\n                event.preventDefault(); // Prevent the default Enter key behavior (e.g., line break)\r\n            } else if (event.key === \"Enter\" && event.shiftKey) {\r\n                event.preventDefault(); // Prevent the default Enter key behavior\r\n                // Insert a newline character in the textarea\r\n                const currentPos = messageInput.selectionStart;\r\n                const text = messageInput.value;\r\n                const newText = text.substring(0, currentPos) + \"\\n\" + text.substring(currentPos);\r\n                messageInput.value = newText;\r\n            }\r\n        }\r\n\r\n        function handleButtonClick() {\r\n            sendMessage();\r\n        }\r\n\r\n        function handleInputChange() {\r\n            submitButton.style.visibility = messageInput.value.trim() !== \"\" ? \"visible\" : \"hidden\";\r\n        }\r\n\r\n        messageInput.addEventListener(\"keydown\", handleKeyDown);\r\n        submitButton.addEventListener(\"click\", handleButtonClick);\r\n        messageInput.addEventListener(\"input\", handleInputChange);\r\n\r\n        window.addEventListener(\"beforeunload\", clearChatHistory);\r\n        return () => {\r\n            messageInput.removeEventListener(\"keydown\", handleKeyDown);\r\n            submitButton.removeEventListener(\"click\", handleButtonClick);\r\n            messageInput.removeEventListener(\"input\", handleInputChange);\r\n        };\r\n    }, []);\r\n\r\n    // Add a function to handle sending the message\r\n    function sendMessage() {\r\n        const messageInput = document.getElementById(\"messageInput\");\r\n        const message = messageInput.value.trim();\r\n\r\n        if (message !== \"\") {\r\n            // Append the user message to the chatMessages list\r\n            setChatMessages(prevMessages => [...prevMessages, {text: message, type: 'user'}]);\r\n\r\n            // Show loading message\r\n            const loadingMessage = createLoadingMessage();\r\n            setChatMessages(prevMessages => [...prevMessages, loadingMessage]);\r\n\r\n            // Check if there is a predefined response for the user's input\r\n            const response = getPredefinedResponse(message);\r\n\r\n            if (response) {\r\n                // Append the chatbot response to the chatMessages list with a delay\r\n                setTimeout(() => {\r\n                    setChatMessages(prevMessages => [\r\n                        ...prevMessages.filter(msg => msg !== loadingMessage),\r\n                        {text: response, type: 'bot'}\r\n                    ]);\r\n                }, 1000);\r\n            }\r\n\r\n            // Reset the input\r\n            messageInput.value = \"\";\r\n        }\r\n    }\r\n\r\n    function clearChatHistory() {\r\n        localStorage.removeItem('chatMessages');\r\n    }\r\n\r\n    // Function to check if there is a predefined response for the user's input\r\n    function getPredefinedResponse(userInput) {\r\n        const lowerCaseInput = userInput.toLowerCase();\r\n\r\n        for (let i = 0; i < chatResponseObjects.length; i++) {\r\n            const question = chatResponseObjects[i].question;\r\n            const response = chatResponseObjects[i].response;\r\n\r\n            if ((typeof question === 'string' && lowerCaseInput === question.toLowerCase()) ||\r\n                (question instanceof RegExp && question.test(userInput))) {\r\n                if (typeof response === 'function') {\r\n                    return response();\r\n                } else {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function createLoadingMessage() {\r\n        return { text: <div className=\"message loading\"><span className=\"bi bi-three-dots\"></span></div>, type: 'loading' };\r\n    }\r\n\r\n    return (\r\n        <div className=\"chatbot\" style={{ display: isOpen ? 'block' : 'none' }}>\r\n            <div className=\"chatbot-header\">\r\n                <button type=\"button\" className=\"btn-close close-btn\" aria-label=\"Close\" onClick={closeChat}></button>\r\n                <img src={Robot} alt=\"robot\" className=\"header-robot\"/>\r\n                <span className=\"chatbot-name\">Virtual Assistant</span>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"initial-message-container\">\r\n                    <img className=\"robot-dog\" src={RobotDog} alt=\"robot-dog\"/>\r\n                    <div className=\"initial-message\">\r\n                        <p id=\"chatbotInitialMessage\" className=\"message1\">I am <b>NexusBot</b></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"quick-link-container\">\r\n                    <p className=\"quick-message\">How can I help you?</p>\r\n                    <ul className=\"quick-link-list\">\r\n                        <li className=\"link-item\"><Link to=\"/tech-support\" className=\"tech-support-link\"><b>Tech Issue</b></Link></li>\r\n                        <li className=\"link-item\"><Link to=\"/tech-support\" className=\"tech-support-link\"><b>Return</b></Link></li>\r\n                        <li className=\"link-item\"><Link to=\"/cart\" className=\"tech-support-link\"><b>Order Status</b></Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"QA-container\">\r\n                    <ul className=\"QA-list\" id=\"chatMessages\" style={{ overflowY: 'auto' }}>\r\n                        {chatMessages.map((message, index) => (\r\n                            <li key={index} className={message.type === 'user' ? 'user-message' : 'robot-message'}>\r\n                                {message.type === 'user' && <span>You: </span>}\r\n                                {message.type === 'bot' && <img src={RobotAssistant} alt=\"robot\" className=\"robot-assist-icon\"/>}\r\n                                <span>{message.text}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"input-group flex-nowrap input-container\">\r\n                    <input type=\"text\" className=\"type-section\" id=\"messageInput\" placeholder=\"Type message here\" autoComplete=\"off\" autoFocus={true}/>\r\n                        <i id=\"submitButton\" className=\"bi bi-arrow-right-circle\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}